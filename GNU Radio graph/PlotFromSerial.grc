options:
  parameters:
    author: Tomsov Vsevolod
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: PlotFromSerial
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Serial Plot
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [88, 8.0]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '2000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 24.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport serial\nimport\
      \ re\nimport numpy as np\nfrom gnuradio import gr\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"\n    Read data from serial port and forward it to output. \n    portNumber\
      \ is number, you can see in the name of your \n    serial port in device manager,\
      \ like COM16 or COM7 \n    \"\"\"\n\n    decodedNumber = 0\n    \n    def __init__(self,\
      \ portNumber = 16, baudrate = 2000000): \n        \"\"\"arguments to this function\
      \ show up as parameters in GRC\"\"\"\n        \n        portName = 'COM' + str(portNumber)\
      \ # Concatenate string and number\n        \n        gr.sync_block.__init__(\n\
      \            self,\n            name = 'Serial Read',   \n            in_sig\
      \ = [], # no inputs \n            out_sig = [np.float32] # also you can try\
      \ to use int\n        )\n        \n        self.port = serial.Serial(portName,\
      \ baudrate, timeout = 3.0) # open serial\n        if (self.port.is_open): #if\
      \ already opened - close and open again\n            self.port.close()\n   \
      \         self.port.open()\n        else:\n            self.port.open()\n  \
      \          \n            \n    def work(self, input_items, outputItems):\n \
      \       \n        serialData = self.port.readline() # byte-like variable\n \
      \       decoded = str(serialData) # transform into string\n        \n      \
      \  temp = re.findall(r'\\d+', decoded) #remove system symbols\n        \n  \
      \      try:\n            self.decodedNumber = temp[0] \n        except:\n  \
      \          outputItems[0][:] = self.decodedNumber \n        \n        outputItems[0][:]\
      \ = float(self.decodedNumber)\n        return len(outputItems[0])\n"
    affinity: ''
    alias: ''
    baudrate: '2000000'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    portNumber: '16'
  states:
    _io_cache: ('Serial Read', 'blk', [('portNumber', '16'), ('baudrate', '2000000')],
      [], [('0', 'float', 1)], '\n    Read data from serial port and forward it to
      output. \n    portNumber is number, you can see in the name of your \n    serial
      port in device manager, like COM16 or COM7 \n    ', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 152.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0_0_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'True'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'True'
    gui_hint: 0,0,1,1
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: ''
    nconnections: '1'
    size: '500000'
    srate: '2000000'
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '100'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 144.0]
    rotation: 0
    state: enabled

connections:
- [epy_block_0, '0', qtgui_time_sink_x_0_0_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.7.0
